import java.util.Random;
import java.util.Scanner;
public class merge
{
static int max=30000;
public static void main(String[ ] args)
{
int a[]=new int[max];
long start,end;
Scanner s=new Scanner (System.in);
System.out.println("********MERGE SORT ALGORITHM********");
System.out.println("Enter the no. of elements to be sorted :");
int n=s.nextInt();
Random rand=new Random();
for(int i=0;i<n;i++)
{
a[i]=rand.nextInt(100);
}
System.out.println("Array elements to be sorted are :");
for(int i=0;i<n;i++)
{
System.out.print(a[i]+" ");
}
start=System.nanoTime();
mergesort(a,0,n-1);
end=System.nanoTime();
System.out.println("\nThe sorted elements are :");
for(int i=0;i<n;i++)
{
System.out.print(a[i]+" ");
}

System.out.println("\nThe time taken to sort is "+(end-start)+"ns");
System.out.println("******************************************");
}
static void mergesort(int a[],int low,int high)
{
int mid;
if(low<high)
{
mid=(low+high)/2;
mergesort(a,low,mid);
mergesort(a,mid+1,high);
merge(a,low,mid,high); 
}
}
static void merge(int a[],int low,int mid,int high)
{
int i=low ,j =mid+1 , k=low ;
int temp[]=new int[max];
while ( i <= mid && j <= high )
{
if ( a[ i ] < a[ j ] )
temp [ k++ ] = a [ i++ ] ;
else
temp [ k++ ] = a [ j++ ] ;
}
while( i <= mid ) 
temp [ k++ ] = a [ i++ ] ;
while( j <= high ) 
temp [ k++ ] = a [ j++ ] ;

for ( i=low ; i <= high ;i++ )
a[ i ] = temp [ i ] ;
}
}
