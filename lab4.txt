import java.util.Random;
import java.util.Scanner;
public class quick
{
static int max=30000;
public static void main(String[] args)
{
int a[ ]=new int[max];
long start,end;
Scanner s=new Scanner (System.in);
System.out.println("********QUICK SORT ALGORITHM********");
System.out.println("Enter the no. of elements to be sorted :");
int n=s.nextInt();
Random rand=new Random();
for(int i=0;i<n;i++)
{
a[i]=rand.nextInt(100);
}
System.out.println("Array elements to be sorted are :");
for(int i=0;i<n;i++)
{
System.out.print(a[i]+" ");
}
a[n]=9999;
start=System.nanoTime( );
qsort(a,0,n-1);
end=System.nanoTime( );
System.out.println("\nThe sorted elements are :");
for(int i=0;i<n;i++)
{
System.out.print(a[i]+" ");
}
System.out.println("\nThe time taken to sort is "+(end-start)+"ns");
System.out.println("******************************************");
}//end of main
static void qsort(int a[],int low,int high)
{
int pivot;
if(low<high)
{
pivot=partition(a,low,high);
qsort(a,low,pivot-1);
qsort(a,pivot+1,high);
}
}
static int partition(int a[ ],int low,int high)
{
int pivot,i,j;
pivot=a[high];
i=low;
for(j=low;j<high;j++)
{
if (a[j]<pivot)
{
swap(a,i,j);
i++;
}
}
swap (a,i,high);
return i;
}
static void swap(int a[],int m,int n)
{
int temp;
temp=a[m];
a[m]=a[n];
a[n]=temp;
}
}